##################################################################
#             the shmdrv shared memory allocator module
#
#  loosely based on: http://www.embrisk.com/notes/shmem.html
#  Status: public domain
#
##################################################################

#------------------------------
# liblinuxcncshm.so shared lib

# make shmdrvapi.o a shared library, which gets around -fPIC
# issues on amd64
SHMDRVAPISRCS := rtapi/shmdrv/shmdrvapi.c

$(call TOOBJSDEPS, $(SHMDRVAPISRCS)): EXTRAFLAGS += -fPIC
SHMDRVLIB := ../lib/liblinuxcncshm.so

$(SHMDRVLIB).0: $(call TOOBJS, $(SHMDRVAPISRCS))
	$(ECHO) Creating shared library $(notdir $@)
	@mkdir -p ../lib
	@rm -f $@
	$(Q)$(CC) $(LDFLAGS)  -Wl,-soname,$(notdir $@) -shared \
	    -o $@ $^ -lrt
USERSRCS += $(SHMDRVAPISRCS)
TARGETS += $(SHMDRVLIB) $(SHMDRVLIB).0

ifeq ($(BUILD_EXAMPLES),yes)
#------------------------------
# mutexwatch binary

# lock debugging help plus a bit of API example
MUTEXWATCH_SRCS =  rtapi/shmdrv/mutexwatch.c

../bin/mutexwatch: ../lib/liblinuxcncshm.so $(call TOOBJS, $(MUTEXWATCH_SRCS))
	$(ECHO) Linking $(notdir $@)
	$(Q)$(CC)  $(LDFLAGS) -o $@ $^  ../lib/liblinuxcncshm.so -lrt

USERSRCS += $(MUTEXWATCH_SRCS)
TARGETS += ../bin/mutexwatch

endif # BUILD_EXAMPLES


clean: shmdrv-clean
shmdrv-clean:
	rm -rf ../include/shmdrv
